{"version":3,"file":"index-CvKIf9pg.js","sources":["../../src/utils/debounce.ts","../../src/components/ActorSearch.vue","../../src/services/pathFinder.ts","../../src/App.vue","../../src/main.ts"],"sourcesContent":["export function debounce<T extends (...args: any[]) => any>(\n  fn: T,\n  delay: number\n): (...args: Parameters<T>) => void {\n  let timeoutId: ReturnType<typeof setTimeout> | null = null\n\n  return function (...args: Parameters<T>) {\n    if (timeoutId) {\n      clearTimeout(timeoutId)\n    }\n\n    timeoutId = setTimeout(() => {\n      fn(...args)\n      timeoutId = null\n    }, delay)\n  }\n}","<template>\n  <div class=\"space-y-4\">\n    <label :for=\"label\" class=\"block text-lg font-medium text-foreground/90\">\n      {{ label }}\n    </label>\n\n    <!-- Search Input -->\n    <div class=\"relative group\">\n      <input\n        :id=\"label\"\n        type=\"text\"\n        :value=\"modelValue\"\n        @input=\"handleInput\"\n        @keydown.down.prevent=\"handleArrowDown\"\n        @keydown.up.prevent=\"handleArrowUp\"\n        @keydown.enter.prevent=\"handleEnter\"\n        @blur=\"handleBlur\"\n        :placeholder=\"placeholder\"\n        class=\"w-full h-14 px-5 bg-secondary/30 rounded-xl text-lg \n               text-foreground placeholder:text-muted-foreground focus:outline-none\n               border border-white/[0.05] group-hover:border-primary/50 focus:border-primary\n               transition-all duration-300 glass-effect\"\n      />\n      \n      <!-- Suggestions Dropdown -->\n      <div\n        v-if=\"showSuggestions && suggestions.length > 0\"\n        class=\"absolute z-50 w-full mt-2 glass-effect rounded-xl overflow-hidden\"\n      >\n        <div class=\"max-h-64 overflow-y-auto\">\n          <div\n            v-for=\"(actor, index) in suggestions\"\n            :key=\"actor.id\"\n            @mousedown=\"selectSuggestion(actor)\"\n            @mouseover=\"selectedIndex = index\"\n            :class=\"[\n              'px-5 py-4 cursor-pointer flex items-center gap-3 transition-colors',\n              selectedIndex === index ? 'bg-primary/20' : 'hover:bg-primary/10'\n            ]\"\n          >\n            <img\n              v-if=\"actor.profile_path\"\n              :src=\"`https://image.tmdb.org/t/p/w45${actor.profile_path}`\"\n              :alt=\"actor.name\"\n              class=\"w-8 h-8 rounded-full object-cover\"\n            />\n            <div v-else class=\"w-8 h-8 rounded-full bg-secondary flex items-center justify-center text-sm\">\n              {{ actor.name.charAt(0) }}\n            </div>\n            <div>\n              <div class=\"font-medium\">{{ actor.name }}</div>\n              <div class=\"text-sm text-muted-foreground\">\n                {{ actor.known_for_department }}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, watch } from 'vue'\nimport { searchActor } from '../services/tmdb'\nimport type { Actor } from '../types'\nimport { debounce } from '../utils/debounce'\n\nconst props = defineProps<{\n  label: string\n  modelValue: string\n  placeholder?: string\n}>()\n\nconst emit = defineEmits<{\n  'update:model-value': [value: string]\n  'select': [actor: Actor]\n}>()\n\nconst suggestions = ref<Actor[]>([])\nconst showSuggestions = ref(false)\nconst selectedIndex = ref(-1)\n\nconst ALLOWED_DEPARTMENTS = ['Acting']\nconst MIN_POPULARITY = 2 // AbaissÃ© pour inclure plus d'acteurs\n\nconst debouncedSearch = debounce(async (query: string) => {\n  if (query.length < 2) {\n    suggestions.value = []\n    return\n  }\n  \n  try {\n    const results = await searchActor(query)\n    suggestions.value = results\n      .filter(actor => \n        ALLOWED_DEPARTMENTS.includes(actor.known_for_department || '') &&\n        actor.profile_path && // Only actors with profile photos\n        actor.popularity && actor.popularity >= MIN_POPULARITY // Only somewhat popular actors\n      )\n      .sort((a, b) => (b.popularity || 0) - (a.popularity || 0)) // Sort by popularity\n      .slice(0, 5)\n    selectedIndex.value = -1\n    showSuggestions.value = true\n  } catch (error) {\n    console.error('Error fetching suggestions:', error)\n    suggestions.value = []\n  }\n}, 300)\n\nfunction handleInput(event: Event) {\n  const value = (event.target as HTMLInputElement).value\n  emit('update:model-value', value)\n  debouncedSearch(value)\n}\n\nfunction selectSuggestion(actor: Actor) {\n  emit('update:model-value', actor.name)\n  emit('select', actor)\n  showSuggestions.value = false\n  suggestions.value = []\n}\n\nfunction handleArrowDown() {\n  if (suggestions.value.length) {\n    selectedIndex.value = (selectedIndex.value + 1) % suggestions.value.length\n  }\n}\n\nfunction handleArrowUp() {\n  if (suggestions.value.length) {\n    selectedIndex.value = selectedIndex.value <= 0 \n      ? suggestions.value.length - 1 \n      : selectedIndex.value - 1\n  }\n}\n\nfunction handleEnter() {\n  if (selectedIndex.value >= 0 && suggestions.value[selectedIndex.value]) {\n    selectSuggestion(suggestions.value[selectedIndex.value])\n  }\n}\n\nfunction handleBlur() {\n  setTimeout(() => {\n    showSuggestions.value = false\n  }, 200)\n}\n\nwatch(() => props.modelValue, (newValue) => {\n  if (!newValue) {\n    suggestions.value = []\n    showSuggestions.value = false\n  }\n})\n</script>","import { Actor, Movie, getActorMovies, getMovieCast } from './tmdb';\n\nconst MAX_DEPTH = 20;\nconst MIN_VOTE_COUNT = 100;\nconst MAX_MOVIES_PER_ACTOR = 100;\nconst MAX_ACTORS_PER_MOVIE = 30;\n\n// Cache for API calls\nconst movieCache = new Map<number, Movie[]>();\nconst castCache = new Map<number, Actor[]>();\n\ninterface SearchNode {\n  node: Actor | Movie;\n  path: Array<Actor | Movie>;\n  depth: number;\n}\n\n// Event emitter for search progress\ntype ProgressCallback = (movie: Movie) => void;\nlet onMovieProgress: ProgressCallback | null = null;\n\nexport function setProgressCallback(callback: ProgressCallback) {\n  onMovieProgress = callback;\n}\n\nexport async function findPath(startActor: Actor, endActor: Actor): Promise<Array<Actor | Movie>> {\n  console.log(`Starting bidirectional path search between ${startActor.name} and ${endActor.name}`);\n  \n  const forwardQueue: SearchNode[] = [{ node: startActor, path: [startActor], depth: 0 }];\n  const backwardQueue: SearchNode[] = [{ node: endActor, path: [endActor], depth: 0 }];\n  \n  const forwardVisited = new Map<string, SearchNode>();\n  const backwardVisited = new Map<string, SearchNode>();\n  \n  forwardVisited.set(`actor-${startActor.id}`, forwardQueue[0]);\n  backwardVisited.set(`actor-${endActor.id}`, backwardQueue[0]);\n\n  while (forwardQueue.length > 0 && backwardQueue.length > 0) {\n    if (forwardQueue[0].depth <= MAX_DEPTH) {\n      const intersection = await expandFrontier(forwardQueue, forwardVisited, backwardVisited, 'forward');\n      if (intersection) {\n        console.log('Found intersection in forward search!');\n        const path = constructPath(intersection.forwardNode, intersection.backwardNode);\n        if (await validatePath(path)) {\n          return path;\n        }\n      }\n    }\n    \n    if (backwardQueue[0].depth <= MAX_DEPTH) {\n      const intersection = await expandFrontier(backwardQueue, backwardVisited, forwardVisited, 'backward');\n      if (intersection) {\n        console.log('Found intersection in backward search!');\n        const path = constructPath(intersection.backwardNode, intersection.forwardNode);\n        if (await validatePath(path)) {\n          return path;\n        }\n      }\n    }\n\n    if ((forwardQueue.length === 0 && backwardQueue.length === 0) || \n        (forwardQueue[0]?.depth > MAX_DEPTH && backwardQueue[0]?.depth > MAX_DEPTH)) {\n      console.log('No path found within depth limit');\n      return [];\n    }\n  }\n\n  console.log('No path found');\n  return [];\n}\n\nasync function expandFrontier(\n  queue: SearchNode[],\n  visited: Map<string, SearchNode>,\n  otherVisited: Map<string, SearchNode>,\n  direction: 'forward' | 'backward'\n): Promise<{ forwardNode: SearchNode; backwardNode: SearchNode } | null> {\n  const current = queue.shift();\n  if (!current) return null;\n\n  console.log(`Expanding ${direction} frontier at depth ${current.depth} for ${\n    'name' in current.node ? current.node.name : current.node.title\n  }`);\n\n  if ('name' in current.node) {\n    const actor = current.node;\n    try {\n      let movies = movieCache.get(actor.id);\n      if (!movies) {\n        movies = await getActorMovies(actor.id);\n        movieCache.set(actor.id, movies);\n        console.log(`Fetched ${movies.length} movies for ${actor.name}`);\n      }\n\n      const filteredMovies = movies\n        .filter(movie => movie.vote_count >= MIN_VOTE_COUNT)\n        .sort((a, b) => (b.vote_count || 0) - (a.vote_count || 0))\n        .slice(0, MAX_MOVIES_PER_ACTOR);\n\n      for (const movie of filteredMovies) {\n        // Emit progress event\n        if (onMovieProgress) {\n          onMovieProgress(movie);\n          // Add a small delay to make the transition visible\n          await new Promise(resolve => setTimeout(resolve, 200));\n        }\n\n        const movieKey = `movie-${movie.id}`;\n        \n        if (!visited.has(movieKey)) {\n          const nextNode: SearchNode = {\n            node: movie,\n            path: direction === 'forward' \n              ? [...current.path, movie]\n              : [movie, ...current.path],\n            depth: current.depth + 1\n          };\n          visited.set(movieKey, nextNode);\n          \n          let cast = castCache.get(movie.id);\n          if (!cast) {\n            cast = await getMovieCast(movie.id);\n            castCache.set(movie.id, cast);\n          }\n\n          const mainCast = cast\n            .filter(a => a.known_for_department === 'Acting')\n            .sort((a, b) => (b.popularity || 0) - (a.popularity || 0))\n            .slice(0, MAX_ACTORS_PER_MOVIE);\n\n          for (const castMember of mainCast) {\n            const castMemberKey = `actor-${castMember.id}`;\n            \n            if (otherVisited.has(castMemberKey)) {\n              const otherNode = otherVisited.get(castMemberKey)!;\n              const castMemberNode: SearchNode = {\n                node: castMember,\n                path: direction === 'forward'\n                  ? [...current.path, movie, castMember]\n                  : [castMember, movie, ...current.path],\n                depth: current.depth + 2\n              };\n              \n              return {\n                forwardNode: direction === 'forward' ? castMemberNode : otherNode,\n                backwardNode: direction === 'forward' ? otherNode : castMemberNode\n              };\n            }\n\n            if (!visited.has(castMemberKey)) {\n              const nextActorNode: SearchNode = {\n                node: castMember,\n                path: direction === 'forward'\n                  ? [...current.path, movie, castMember]\n                  : [castMember, movie, ...current.path],\n                depth: current.depth + 2\n              };\n              visited.set(castMemberKey, nextActorNode);\n              queue.push(nextActorNode);\n            }\n          }\n        }\n      }\n    } catch (error) {\n      console.error(`Error processing actor ${actor.name}:`, error);\n    }\n  }\n\n  return null;\n}\n\nfunction constructPath(forwardNode: SearchNode, backwardNode: SearchNode): Array<Actor | Movie> {\n  const forwardPath = forwardNode.path;\n  const backwardPath = backwardNode.path;\n  \n  const intersectionId = 'name' in forwardPath[forwardPath.length - 1] \n    ? (forwardPath[forwardPath.length - 1] as Actor).id\n    : (forwardPath[forwardPath.length - 1] as Movie).id;\n\n  const splitIndex = backwardPath.findIndex(node => {\n    const nodeId = 'name' in node ? (node as Actor).id : (node as Movie).id;\n    return nodeId === intersectionId;\n  });\n\n  return [...forwardPath, ...backwardPath.slice(splitIndex + 1)];\n}\n\nasync function validatePath(path: Array<Actor | Movie>): Promise<boolean> {\n  for (let i = 0; i < path.length - 1; i++) {\n    const current = path[i];\n    const next = path[i + 1];\n\n    if ('name' in current && 'title' in next) {\n      const movies = movieCache.get(current.id) || await getActorMovies(current.id);\n      if (!movies.some(m => m.id === next.id)) {\n        console.log(`Invalid connection: ${current.name} did not appear in ${next.title}`);\n        return false;\n      }\n    } else if ('title' in current && 'name' in next) {\n      const cast = castCache.get(current.id) || await getMovieCast(current.id);\n      if (!cast.some(a => a.id === next.id)) {\n        console.log(`Invalid connection: ${next.name} did not appear in ${current.title}`);\n        return false;\n      }\n    } else {\n      console.log('Invalid path structure: consecutive actors or movies');\n      return false;\n    }\n  }\n\n  return true;\n}\n\nsetInterval(() => {\n  console.log('Clearing path finding caches');\n  movieCache.clear();\n  castCache.clear();\n}, 1000 * 60 * 5);","<template>\n  <div class=\"min-h-screen bg-background text-foreground p-6\">\n    <div class=\"max-w-4xl mx-auto\">\n      <!-- Header -->\n      <header class=\"text-center mb-12\">\n        <h1 class=\"text-4xl font-bold mb-3 gradient-text\">Actor Link</h1>\n        <p class=\"text-lg text-muted-foreground\">\n          Discover how actors are connected through movies\n        </p>\n      </header>\n\n      <!-- Search Form -->\n      <div class=\"grid gap-8 md:grid-cols-2 mb-8\">\n        <ActorSearch\n          label=\"First Actor\"\n          v-model=\"searchQuery1\"\n          placeholder=\"e.g., Leonardo DiCaprio\"\n          @select=\"handleActor1Select\"\n        />\n        <ActorSearch\n          label=\"Second Actor\"\n          v-model=\"searchQuery2\"\n          placeholder=\"e.g., Tom Hanks\"\n          @select=\"handleActor2Select\"\n        />\n      </div>\n\n      <!-- Selected Actors -->\n      <div v-if=\"actor1 || actor2\" class=\"grid gap-6 md:grid-cols-2 mb-8\">\n        <div v-if=\"actor1\" class=\"glass-effect rounded-xl p-6\">\n          <div class=\"flex items-center gap-4\">\n            <img\n              v-if=\"actor1.profile_path\"\n              :src=\"`https://image.tmdb.org/t/p/w185${actor1.profile_path}`\"\n              :alt=\"actor1.name\"\n              class=\"w-24 h-24 rounded-lg object-cover\"\n            />\n            <div v-else class=\"w-24 h-24 rounded-lg bg-secondary flex items-center justify-center text-3xl\">\n              {{ actor1.name.charAt(0) }}\n            </div>\n            <div class=\"flex-1\">\n              <div class=\"flex items-center gap-3\">\n                <h3 class=\"text-2xl font-bold\">{{ actor1.name }}</h3>\n                <a \n                  v-if=\"actor1.imdb_url\"\n                  :href=\"actor1.imdb_url\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  class=\"px-2 py-1 bg-[#f3ce13] text-black rounded font-medium text-xs hover:bg-[#f3ce13]/90 transition-colors\"\n                >\n                  IMDb\n                </a>\n              </div>\n              <p class=\"text-muted-foreground mt-1\">{{ actor1.known_for_department }}</p>\n            </div>\n            <button \n              @click=\"clearActor(1)\"\n              class=\"ml-auto p-2 hover:text-primary transition-colors\"\n              title=\"Remove actor\"\n            >\n              <svg class=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M6 18L18 6M6 6L18 18\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n              </svg>\n            </button>\n          </div>\n        </div>\n\n        <div v-if=\"actor2\" class=\"glass-effect rounded-xl p-6\">\n          <div class=\"flex items-center gap-4\">\n            <img\n              v-if=\"actor2.profile_path\"\n              :src=\"`https://image.tmdb.org/t/p/w185${actor2.profile_path}`\"\n              :alt=\"actor2.name\"\n              class=\"w-24 h-24 rounded-lg object-cover\"\n            />\n            <div v-else class=\"w-24 h-24 rounded-lg bg-secondary flex items-center justify-center text-3xl\">\n              {{ actor2.name.charAt(0) }}\n            </div>\n            <div class=\"flex-1\">\n              <div class=\"flex items-center gap-3\">\n                <h3 class=\"text-2xl font-bold\">{{ actor2.name }}</h3>\n                <a \n                  v-if=\"actor2.imdb_url\"\n                  :href=\"actor2.imdb_url\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  class=\"px-2 py-1 bg-[#f3ce13] text-black rounded font-medium text-xs hover:bg-[#f3ce13]/90 transition-colors\"\n                >\n                  IMDb\n                </a>\n              </div>\n              <p class=\"text-muted-foreground mt-1\">{{ actor2.known_for_department }}</p>\n            </div>\n            <button \n              @click=\"clearActor(2)\"\n              class=\"ml-auto p-2 hover:text-primary transition-colors\"\n              title=\"Remove actor\"\n            >\n              <svg class=\"w-6 h-6\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M6 18L18 6M6 6L18 18\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n              </svg>\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <!-- Find Connection Button -->\n      <button\n        @click=\"findConnection\"\n        :disabled=\"!canSearch\"\n        class=\"w-full h-14 bg-primary disabled:opacity-50 disabled:cursor-not-allowed rounded-xl font-medium text-lg\n               hover:bg-primary/90 transition-colors mb-8\"\n      >\n        {{ isLoading ? 'Searching...' : 'Find Connection' }}\n      </button>\n\n      <!-- Error Message -->\n      <div v-if=\"error\" class=\"text-red-500 text-center mb-8\">\n        {{ error }}\n      </div>\n\n      <!-- Search Progress -->\n      <SearchProgress\n        v-if=\"isLoading\"\n        :current-movie=\"currentMovie\"\n        :progress=\"searchProgress\"\n      />\n\n      <!-- Connection Path -->\n      <ConnectionPath\n        :path=\"connectionPath\"\n        :is-loading=\"isLoading\"\n      />\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed } from 'vue'\nimport ActorSearch from './components/ActorSearch.vue'\nimport ConnectionPath from './components/ConnectionPath.vue'\nimport SearchProgress from './components/SearchProgress.vue'\nimport { getActorDetails } from './services/tmdb'\nimport { findPath, setProgressCallback } from './services/pathFinder'\nimport type { Actor, MovieDetails, Movie } from './types'\n\nconst searchQuery1 = ref('')\nconst searchQuery2 = ref('')\nconst actor1 = ref<Actor | null>(null)\nconst actor2 = ref<Actor | null>(null)\nconst isLoading = ref(false)\nconst error = ref<string | null>(null)\nconst connectionPath = ref<Array<Actor | MovieDetails>>([])\nconst currentMovie = ref<Movie | null>(null)\nconst searchProgress = ref(0)\nlet movieCount = 0\n\nconst canSearch = computed(() => actor1.value && actor2.value && !isLoading.value)\n\nasync function handleActor1Select(actor: Actor) {\n  try {\n    actor1.value = await getActorDetails(actor.id)\n    error.value = null\n  } catch (err) {\n    error.value = 'Failed to load actor details'\n    console.error(err)\n  }\n}\n\nasync function handleActor2Select(actor: Actor) {\n  try {\n    actor2.value = await getActorDetails(actor.id)\n    error.value = null\n  } catch (err) {\n    error.value = 'Failed to load actor details'\n    console.error(err)\n  }\n}\n\nfunction clearActor(number: number) {\n  if (number === 1) {\n    actor1.value = null\n    searchQuery1.value = ''\n  } else {\n    actor2.value = null\n    searchQuery2.value = ''\n  }\n  connectionPath.value = []\n  error.value = null\n}\n\nasync function findConnection() {\n  if (!actor1.value || !actor2.value) return\n\n  try {\n    isLoading.value = true\n    error.value = null\n    connectionPath.value = []\n    currentMovie.value = null\n    searchProgress.value = 0\n    movieCount = 0\n\n    // Set up progress callback\n    setProgressCallback((movie: Movie) => {\n      currentMovie.value = movie\n      movieCount++\n      searchProgress.value = Math.min((movieCount / 100) * 100, 100)\n    })\n\n    const path = await findPath(actor1.value, actor2.value)\n    \n    if (path.length === 0) {\n      error.value = 'No connection found between these actors'\n    } else {\n      connectionPath.value = path\n    }\n  } catch (err) {\n    error.value = err instanceof Error ? err.message : 'An error occurred'\n    console.error('Path finding error:', err)\n  } finally {\n    isLoading.value = false\n    currentMovie.value = null\n    setProgressCallback(null)\n  }\n}\n</script>","import { createApp } from 'vue'\nimport App from './App.vue'\nimport './index.css'\n\ncreateApp(App).mount('#app')"],"names":["debounce","fn","delay","timeoutId","args","MIN_POPULARITY","props","__props","emit","__emit","suggestions","ref","showSuggestions","selectedIndex","ALLOWED_DEPARTMENTS","debouncedSearch","query","results","searchActor","actor","b","error","handleInput","event","value","selectSuggestion","handleArrowDown","handleArrowUp","handleEnter","handleBlur","watch","newValue","MAX_DEPTH","MIN_VOTE_COUNT","MAX_MOVIES_PER_ACTOR","MAX_ACTORS_PER_MOVIE","movieCache","castCache","onMovieProgress","setProgressCallback","callback","findPath","startActor","endActor","forwardQueue","backwardQueue","forwardVisited","backwardVisited","intersection","expandFrontier","path","constructPath","validatePath","_a","_b","queue","visited","otherVisited","direction","current","movies","getActorMovies","filteredMovies","movie","a","resolve","movieKey","nextNode","cast","getMovieCast","mainCast","castMember","castMemberKey","otherNode","castMemberNode","nextActorNode","forwardNode","backwardNode","forwardPath","backwardPath","intersectionId","splitIndex","node","i","next","m","searchQuery1","searchQuery2","actor1","actor2","isLoading","connectionPath","currentMovie","searchProgress","movieCount","canSearch","computed","handleActor1Select","getActorDetails","err","handleActor2Select","clearActor","number","findConnection","createApp","App"],"mappings":"k6BAAgB,SAAAA,EACdC,EACAC,EACkC,CAClC,IAAIC,EAAkD,KAEtD,OAAO,YAAaC,EAAqB,CACnCD,GACF,aAAaA,CAAS,EAGxBA,EAAY,WAAW,IAAM,CAC3BF,EAAG,GAAGG,CAAI,EACED,EAAA,MACXD,CAAK,CAAA,CAEZ,8bCoEMG,GAAiB,kIAhBvB,MAAMC,EAAQC,EAMRC,EAAOC,EAKPC,EAAcC,EAAa,CAAA,CAAE,EAC7BC,EAAkBD,EAAI,EAAK,EAC3BE,EAAgBF,EAAI,EAAE,EAEtBG,EAAsB,CAAC,QAAQ,EAG/BC,EAAkBf,EAAS,MAAOgB,GAAkB,CACpD,GAAAA,EAAM,OAAS,EAAG,CACpBN,EAAY,MAAQ,GACpB,MACF,CAEI,GAAA,CACI,MAAAO,EAAU,MAAMC,EAAYF,CAAK,EACvCN,EAAY,MAAQO,EACjB,UACCH,EAAoB,SAASK,EAAM,sBAAwB,EAAE,GAC7DA,EAAM,cACNA,EAAM,YAAcA,EAAM,YAAcd,EAAA,EAEzC,KAAK,CAAC,EAAGe,KAAOA,EAAE,YAAc,IAAM,EAAE,YAAc,EAAE,EACxD,MAAM,EAAG,CAAC,EACbP,EAAc,MAAQ,GACtBD,EAAgB,MAAQ,SACjBS,EAAO,CACN,QAAA,MAAM,8BAA+BA,CAAK,EAClDX,EAAY,MAAQ,EACtB,GACC,GAAG,EAEN,SAASY,EAAYC,EAAc,CAC3B,MAAAC,EAASD,EAAM,OAA4B,MACjDf,EAAK,qBAAsBgB,CAAK,EAChCT,EAAgBS,CAAK,CACvB,CAEA,SAASC,EAAiBN,EAAc,CACjCX,EAAA,qBAAsBW,EAAM,IAAI,EACrCX,EAAK,SAAUW,CAAK,EACpBP,EAAgB,MAAQ,GACxBF,EAAY,MAAQ,EACtB,CAEA,SAASgB,GAAkB,CACrBhB,EAAY,MAAM,SACpBG,EAAc,OAASA,EAAc,MAAQ,GAAKH,EAAY,MAAM,OAExE,CAEA,SAASiB,GAAgB,CACnBjB,EAAY,MAAM,SACNG,EAAA,MAAQA,EAAc,OAAS,EACzCH,EAAY,MAAM,OAAS,EAC3BG,EAAc,MAAQ,EAE9B,CAEA,SAASe,GAAc,CACjBf,EAAc,OAAS,GAAKH,EAAY,MAAMG,EAAc,KAAK,GACnEY,EAAiBf,EAAY,MAAMG,EAAc,KAAK,CAAC,CAE3D,CAEA,SAASgB,GAAa,CACpB,WAAW,IAAM,CACfjB,EAAgB,MAAQ,IACvB,GAAG,CACR,CAEA,OAAAkB,EAAM,IAAMxB,EAAM,WAAayB,GAAa,CACrCA,IACHrB,EAAY,MAAQ,GACpBE,EAAgB,MAAQ,GAC1B,CACD,y1KCxJKoB,EAAY,GACZC,GAAiB,IACjBC,GAAuB,IACvBC,GAAuB,GAGvBC,MAAiB,IACjBC,MAAgB,IAUtB,IAAIC,EAA2C,KAExC,SAASC,EAAoBC,EAA4B,CAC5CF,EAAAE,CACpB,CAEsB,eAAAC,GAASC,EAAmBC,EAAgD,SAChG,QAAQ,IAAI,8CAA8CD,EAAW,IAAI,QAAQC,EAAS,IAAI,EAAE,EAE1F,MAAAC,EAA6B,CAAC,CAAE,KAAMF,EAAY,KAAM,CAACA,CAAU,EAAG,MAAO,CAAA,CAAG,EAChFG,EAA8B,CAAC,CAAE,KAAMF,EAAU,KAAM,CAACA,CAAQ,EAAG,MAAO,CAAA,CAAG,EAE7EG,MAAqB,IACrBC,MAAsB,IAK5B,IAHAD,EAAe,IAAI,SAASJ,EAAW,EAAE,GAAIE,EAAa,CAAC,CAAC,EAC5DG,EAAgB,IAAI,SAASJ,EAAS,EAAE,GAAIE,EAAc,CAAC,CAAC,EAErDD,EAAa,OAAS,GAAKC,EAAc,OAAS,GAAG,CAC1D,GAAID,EAAa,CAAC,EAAE,OAASZ,EAAW,CACtC,MAAMgB,EAAe,MAAMC,EAAeL,EAAcE,EAAgBC,EAAiB,SAAS,EAClG,GAAIC,EAAc,CAChB,QAAQ,IAAI,uCAAuC,EACnD,MAAME,EAAOC,EAAcH,EAAa,YAAaA,EAAa,YAAY,EAC1E,GAAA,MAAMI,EAAaF,CAAI,EAClB,OAAAA,CAEX,CACF,CAEA,GAAIL,EAAc,CAAC,EAAE,OAASb,EAAW,CACvC,MAAMgB,EAAe,MAAMC,EAAeJ,EAAeE,EAAiBD,EAAgB,UAAU,EACpG,GAAIE,EAAc,CAChB,QAAQ,IAAI,wCAAwC,EACpD,MAAME,EAAOC,EAAcH,EAAa,aAAcA,EAAa,WAAW,EAC1E,GAAA,MAAMI,EAAaF,CAAI,EAClB,OAAAA,CAEX,CACF,CAEA,GAAKN,EAAa,SAAW,GAAKC,EAAc,SAAW,KACtDQ,EAAAT,EAAa,CAAC,IAAd,YAAAS,EAAiB,OAAQrB,KAAasB,EAAAT,EAAc,CAAC,IAAf,YAAAS,EAAkB,OAAQtB,EACnE,eAAQ,IAAI,kCAAkC,EACvC,EAEX,CAEA,eAAQ,IAAI,eAAe,EACpB,EACT,CAEA,eAAeiB,EACbM,EACAC,EACAC,EACAC,EACuE,CACjE,MAAAC,EAAUJ,EAAM,QAClB,GAAA,CAACI,EAAgB,OAAA,KAMjB,GAJJ,QAAQ,IAAI,aAAaD,CAAS,sBAAsBC,EAAQ,KAAK,QACnE,SAAUA,EAAQ,KAAOA,EAAQ,KAAK,KAAOA,EAAQ,KAAK,KAC5D,EAAE,EAEE,SAAUA,EAAQ,KAAM,CAC1B,MAAMxC,EAAQwC,EAAQ,KAClB,GAAA,CACF,IAAIC,EAASxB,EAAW,IAAIjB,EAAM,EAAE,EAC/ByC,IACMA,EAAA,MAAMC,EAAe1C,EAAM,EAAE,EAC3BiB,EAAA,IAAIjB,EAAM,GAAIyC,CAAM,EAC/B,QAAQ,IAAI,WAAWA,EAAO,MAAM,eAAezC,EAAM,IAAI,EAAE,GAG3D,MAAA2C,EAAiBF,EACpB,OAAOG,GAASA,EAAM,YAAc9B,EAAc,EAClD,KAAK,CAAC+B,EAAG5C,KAAOA,EAAE,YAAc,IAAM4C,EAAE,YAAc,EAAE,EACxD,MAAM,EAAG9B,EAAoB,EAEhC,UAAW6B,KAASD,EAAgB,CAE9BxB,IACFA,EAAgByB,CAAK,EAErB,MAAM,IAAI,QAAQE,GAAW,WAAWA,EAAS,GAAG,CAAC,GAGjD,MAAAC,EAAW,SAASH,EAAM,EAAE,GAElC,GAAI,CAACP,EAAQ,IAAIU,CAAQ,EAAG,CAC1B,MAAMC,EAAuB,CAC3B,KAAMJ,EACN,KAAML,IAAc,UAChB,CAAC,GAAGC,EAAQ,KAAMI,CAAK,EACvB,CAACA,EAAO,GAAGJ,EAAQ,IAAI,EAC3B,MAAOA,EAAQ,MAAQ,CAAA,EAEjBH,EAAA,IAAIU,EAAUC,CAAQ,EAE9B,IAAIC,EAAO/B,EAAU,IAAI0B,EAAM,EAAE,EAC5BK,IACIA,EAAA,MAAMC,EAAaN,EAAM,EAAE,EACxB1B,EAAA,IAAI0B,EAAM,GAAIK,CAAI,GAGxB,MAAAE,EAAWF,EACd,OAAOJ,GAAKA,EAAE,uBAAyB,QAAQ,EAC/C,KAAK,CAACA,EAAG,KAAO,EAAE,YAAc,IAAMA,EAAE,YAAc,EAAE,EACxD,MAAM,EAAG7B,EAAoB,EAEhC,UAAWoC,KAAcD,EAAU,CAC3B,MAAAE,EAAgB,SAASD,EAAW,EAAE,GAExC,GAAAd,EAAa,IAAIe,CAAa,EAAG,CAC7B,MAAAC,EAAYhB,EAAa,IAAIe,CAAa,EAC1CE,EAA6B,CACjC,KAAMH,EACN,KAAMb,IAAc,UAChB,CAAC,GAAGC,EAAQ,KAAMI,EAAOQ,CAAU,EACnC,CAACA,EAAYR,EAAO,GAAGJ,EAAQ,IAAI,EACvC,MAAOA,EAAQ,MAAQ,CAAA,EAGlB,MAAA,CACL,YAAaD,IAAc,UAAYgB,EAAiBD,EACxD,aAAcf,IAAc,UAAYe,EAAYC,CAAA,CAExD,CAEA,GAAI,CAAClB,EAAQ,IAAIgB,CAAa,EAAG,CAC/B,MAAMG,EAA4B,CAChC,KAAMJ,EACN,KAAMb,IAAc,UAChB,CAAC,GAAGC,EAAQ,KAAMI,EAAOQ,CAAU,EACnC,CAACA,EAAYR,EAAO,GAAGJ,EAAQ,IAAI,EACvC,MAAOA,EAAQ,MAAQ,CAAA,EAEjBH,EAAA,IAAIgB,EAAeG,CAAa,EACxCpB,EAAM,KAAKoB,CAAa,CAC1B,CACF,CACF,CACF,QACOtD,EAAO,CACd,QAAQ,MAAM,0BAA0BF,EAAM,IAAI,IAAKE,CAAK,CAC9D,CACF,CAEO,OAAA,IACT,CAEA,SAAS8B,EAAcyB,EAAyBC,EAAgD,CAC9F,MAAMC,EAAcF,EAAY,KAC1BG,EAAeF,EAAa,KAE5BG,GAAiB,SAAUF,EAAYA,EAAY,OAAS,CAAC,EAC9DA,EAAYA,EAAY,OAAS,CAAC,EAAY,IAG7CG,EAAaF,EAAa,UAAkBG,IACjC,SAAUA,EAAQA,EAAe,MAC9BF,CACnB,EAEM,MAAA,CAAC,GAAGF,EAAa,GAAGC,EAAa,MAAME,EAAa,CAAC,CAAC,CAC/D,CAEA,eAAe7B,EAAaF,EAA8C,CACxE,QAASiC,EAAI,EAAGA,EAAIjC,EAAK,OAAS,EAAGiC,IAAK,CAClC,MAAAxB,EAAUT,EAAKiC,CAAC,EAChBC,EAAOlC,EAAKiC,EAAI,CAAC,EAEnB,GAAA,SAAUxB,GAAW,UAAWyB,GAE9B,GAAA,EADWhD,EAAW,IAAIuB,EAAQ,EAAE,GAAK,MAAME,EAAeF,EAAQ,EAAE,GAChE,KAAK0B,GAAKA,EAAE,KAAOD,EAAK,EAAE,EACpC,eAAQ,IAAI,uBAAuBzB,EAAQ,IAAI,sBAAsByB,EAAK,KAAK,EAAE,EAC1E,WAEA,UAAWzB,GAAW,SAAUyB,GAErC,GAAA,EADS/C,EAAU,IAAIsB,EAAQ,EAAE,GAAK,MAAMU,EAAaV,EAAQ,EAAE,GAC7D,KAAKK,GAAKA,EAAE,KAAOoB,EAAK,EAAE,EAClC,eAAQ,IAAI,uBAAuBA,EAAK,IAAI,sBAAsBzB,EAAQ,KAAK,EAAE,EAC1E,OAGT,gBAAQ,IAAI,sDAAsD,EAC3D,EAEX,CAEO,MAAA,EACT,CAEA,YAAY,IAAM,CAChB,QAAQ,IAAI,8BAA8B,EAC1CvB,EAAW,MAAM,EACjBC,EAAU,MAAM,CAClB,EAAG,IAAO,GAAK,CAAC,g8BCvEV,MAAAiD,EAAe3E,EAAI,EAAE,EACrB4E,EAAe5E,EAAI,EAAE,EACrB6E,EAAS7E,EAAkB,IAAI,EAC/B8E,EAAS9E,EAAkB,IAAI,EAC/B+E,EAAY/E,EAAI,EAAK,EACrBU,EAAQV,EAAmB,IAAI,EAC/BgF,EAAiBhF,EAAiC,CAAA,CAAE,EACpDiF,EAAejF,EAAkB,IAAI,EACrCkF,EAAiBlF,EAAI,CAAC,EAC5B,IAAImF,EAAa,EAEX,MAAAC,EAAYC,EAAS,IAAMR,EAAO,OAASC,EAAO,OAAS,CAACC,EAAU,KAAK,EAEjF,eAAeO,EAAmB9E,EAAc,CAC1C,GAAA,CACFqE,EAAO,MAAQ,MAAMU,EAAgB/E,EAAM,EAAE,EAC7CE,EAAM,MAAQ,WACP8E,EAAK,CACZ9E,EAAM,MAAQ,+BACd,QAAQ,MAAM8E,CAAG,CACnB,CACF,CAEA,eAAeC,EAAmBjF,EAAc,CAC1C,GAAA,CACFsE,EAAO,MAAQ,MAAMS,EAAgB/E,EAAM,EAAE,EAC7CE,EAAM,MAAQ,WACP8E,EAAK,CACZ9E,EAAM,MAAQ,+BACd,QAAQ,MAAM8E,CAAG,CACnB,CACF,CAEA,SAASE,EAAWC,EAAgB,CAC9BA,IAAW,GACbd,EAAO,MAAQ,KACfF,EAAa,MAAQ,KAErBG,EAAO,MAAQ,KACfF,EAAa,MAAQ,IAEvBI,EAAe,MAAQ,GACvBtE,EAAM,MAAQ,IAChB,CAEA,eAAekF,GAAiB,CAC9B,GAAI,GAACf,EAAO,OAAS,CAACC,EAAO,OAEzB,GAAA,CACFC,EAAU,MAAQ,GAClBrE,EAAM,MAAQ,KACdsE,EAAe,MAAQ,GACvBC,EAAa,MAAQ,KACrBC,EAAe,MAAQ,EACVC,EAAA,EAGbvD,EAAqBwB,GAAiB,CACpC6B,EAAa,MAAQ7B,EACrB+B,IACAD,EAAe,MAAQ,KAAK,IAAKC,EAAa,IAAO,IAAK,GAAG,CAAA,CAC9D,EAED,MAAM5C,EAAO,MAAMT,GAAS+C,EAAO,MAAOC,EAAO,KAAK,EAElDvC,EAAK,SAAW,EAClB7B,EAAM,MAAQ,2CAEdsE,EAAe,MAAQzC,QAElBiD,EAAK,CACZ9E,EAAM,MAAQ8E,aAAe,MAAQA,EAAI,QAAU,oBAC3C,QAAA,MAAM,sBAAuBA,CAAG,CAAA,QACxC,CACAT,EAAU,MAAQ,GAClBE,EAAa,MAAQ,KACrBrD,EAAoB,IAAI,CAC1B,CACF,wgGC5NAiE,EAAUC,EAAG,EAAE,MAAM,MAAM"}